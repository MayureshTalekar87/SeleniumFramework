<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="6" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-21T08:41:41 IST" name="Suite" finished-at="2025-05-21T08:43:11 IST" duration-ms="90248">
    <groups>
      <group name="LoginError">
        <method signature="ErrorValidationTest.LoginErrorValidationTest()[pri:0, instance:testCases.ErrorValidationTest@4dc27487]" name="LoginErrorValidationTest" class="testCases.ErrorValidationTest"/>
      </group> <!-- LoginError -->
    </groups>
    <test started-at="2025-05-21T08:41:41 IST" name="ErrorValidationTest" finished-at="2025-05-21T08:42:58 IST" duration-ms="76609">
      <class name="testCases.ErrorValidationTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testCases.ErrorValidationTest@4dc27487]" started-at="2025-05-21T08:41:41 IST" name="launchApplication" finished-at="2025-05-21T08:42:10 IST" duration-ms="29019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginErrorValidationTest()[pri:0, instance:testCases.ErrorValidationTest@4dc27487]" started-at="2025-05-21T08:42:10 IST" name="LoginErrorValidationTest" finished-at="2025-05-21T08:42:14 IST" duration-ms="3678" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or passwor] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or passwor] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at testCases.ErrorValidationTest.LoginErrorValidationTest(ErrorValidationTest.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidationTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.ErrorValidationTest@4dc27487]" started-at="2025-05-21T08:42:14 IST" name="tearDown" finished-at="2025-05-21T08:42:19 IST" duration-ms="5464" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testCases.ErrorValidationTest@4dc27487]" started-at="2025-05-21T08:42:19 IST" name="launchApplication" finished-at="2025-05-21T08:42:32 IST" duration-ms="13015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginErrorValidationTest()[pri:0, instance:testCases.ErrorValidationTest@4dc27487]" started-at="2025-05-21T08:42:32 IST" name="LoginErrorValidationTest" finished-at="2025-05-21T08:42:33 IST" duration-ms="611" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or passwor] but found [Incorrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or passwor] but found [Incorrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at testCases.ErrorValidationTest.LoginErrorValidationTest(ErrorValidationTest.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginErrorValidationTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.ErrorValidationTest@4dc27487]" started-at="2025-05-21T08:42:33 IST" name="tearDown" finished-at="2025-05-21T08:42:37 IST" duration-ms="3346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testCases.ErrorValidationTest@4dc27487]" started-at="2025-05-21T08:42:37 IST" name="launchApplication" finished-at="2025-05-21T08:42:49 IST" duration-ms="12536" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="ProductErrorValidationTest()[pri:0, instance:testCases.ErrorValidationTest@4dc27487]" started-at="2025-05-21T08:42:49 IST" name="ProductErrorValidationTest" finished-at="2025-05-21T08:42:54 IST" duration-ms="4789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductErrorValidationTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.ErrorValidationTest@4dc27487]" started-at="2025-05-21T08:42:54 IST" name="tearDown" finished-at="2025-05-21T08:42:58 IST" duration-ms="3466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.ErrorValidationTest -->
    </test> <!-- ErrorValidationTest -->
    <test started-at="2025-05-21T08:41:41 IST" name="SubmitOrderTest" finished-at="2025-05-21T08:43:11 IST" duration-ms="90248">
      <class name="testCases.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testCases.SubmitOrderTest@1040be71]" started-at="2025-05-21T08:41:42 IST" name="launchApplication" finished-at="2025-05-21T08:42:11 IST" duration-ms="29142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SubmitOrder(java.util.HashMap)[pri:0, instance:testCases.SubmitOrderTest@1040be71]" started-at="2025-05-21T08:42:11 IST" name="SubmitOrder" data-provider="getData" finished-at="2025-05-21T08:42:25 IST" duration-ms="14640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Mayur@123, email=mayuresh.talekar87@gmail.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SubmitOrderTest@1040be71]" started-at="2025-05-21T08:42:25 IST" name="tearDown" finished-at="2025-05-21T08:42:30 IST" duration-ms="4421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testCases.SubmitOrderTest@1040be71]" started-at="2025-05-21T08:42:30 IST" name="launchApplication" finished-at="2025-05-21T08:42:46 IST" duration-ms="16326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SubmitOrder(java.util.HashMap)[pri:0, instance:testCases.SubmitOrderTest@1040be71]" started-at="2025-05-21T08:42:46 IST" name="SubmitOrder" data-provider="getData" finished-at="2025-05-21T08:42:54 IST" duration-ms="8187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Mayur@1234, email=mltbeet@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SubmitOrderTest@1040be71]" started-at="2025-05-21T08:42:54 IST" name="tearDown" finished-at="2025-05-21T08:42:57 IST" duration-ms="3066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:testCases.SubmitOrderTest@1040be71]" started-at="2025-05-21T08:42:57 IST" name="launchApplication" finished-at="2025-05-21T08:43:08 IST" duration-ms="10590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:testCases.SubmitOrderTest@1040be71]" started-at="2025-05-21T08:43:08 IST" name="OrderHistoryTest" finished-at="2025-05-21T08:43:09 IST" depends-on-methods="testCases.SubmitOrderTest.SubmitOrder" duration-ms="864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SubmitOrderTest@1040be71]" started-at="2025-05-21T08:43:09 IST" name="tearDown" finished-at="2025-05-21T08:43:11 IST" duration-ms="2433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.SubmitOrderTest -->
    </test> <!-- SubmitOrderTest -->
  </suite> <!-- Suite -->
</testng-results>
